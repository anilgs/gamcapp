name: Deploy to AWS ElasticBeanstalk

on:
  push:
    branches:
      - main
      - develop
      - 'release/*'
  pull_request:
    branches:
      - main



env:
  AWS_REGION: ap-south-1
  NODE_VERSION: '18'

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run type check
        run: npm run type-check

      - name: Run linting
        run: npm run lint

      - name: Run build test
        run: npm run build

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: development
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::520943650389:role/ElasticBeanstalkAdmin # Replace with your IAM role ARN
          aws-region: ap-south-1
          audience: sts.amazonaws.com # Recommended for OIDC

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.0

      - name: Install Python and EB CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install EB CLI
        run: pip install awsebcli

      - name: Build application
        run: |
          chmod +x infrastructure/scripts/build.sh
          ./infrastructure/scripts/build.sh

      - name: Deploy to Development
        env:
          DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
        run: |
          chmod +x infrastructure/scripts/deploy.sh
          ./infrastructure/scripts/deploy.sh dev ${{ github.sha }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/heads/release/') && github.event_name == 'push'
    environment: staging
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::520943650389:role/ElasticBeanstalkAdmin # Replace with your IAM role ARN
          aws-region: ap-south-1
          audience: sts.amazonaws.com # Recommended for OIDC

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.0

      - name: Install Python and EB CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install EB CLI
        run: pip install awsebcli

      - name: Build application
        run: |
          chmod +x infrastructure/scripts/build.sh
          ./infrastructure/scripts/build.sh

      - name: Deploy to Staging
        env:
          DB_PASSWORD: ${{ secrets.STAGING_DB_PASSWORD }}
        run: |
          chmod +x infrastructure/scripts/deploy.sh
          ./infrastructure/scripts/deploy.sh staging ${{ github.sha }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::520943650389:role/ElasticBeanstalkAdmin # Replace with your IAM role ARN
          aws-region: ap-south-1
          audience: sts.amazonaws.com # Recommended for OIDC

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.0

      - name: Install Python and EB CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install EB CLI
        run: pip install awsebcli

      - name: Build application
        run: |
          chmod +x infrastructure/scripts/build.sh
          ./infrastructure/scripts/build.sh

      - name: Deploy to Production
        env:
          DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
        run: |
          chmod +x infrastructure/scripts/deploy.sh
          ./infrastructure/scripts/deploy.sh prod ${{ github.sha }}

      - name: Run post-deployment tests
        run: |
          # Add your post-deployment tests here
          echo "Running post-deployment health checks..."
          # curl -f $PRODUCTION_URL/api/health || exit 1